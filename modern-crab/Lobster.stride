<?xml version="1.0" encoding="UTF-8"?>
<class name="Lobster" extends="Actor" extends-java="Actor" enable="true" strideversion="1">
    <javadoc xml:space="preserve"/>
    <imports>
        <import target="java.util.*" enable="true"/>
        <import target="greenfoot.*" enable="true"/>
    </imports>
    <implements/>
    <fields/>
    <constructors>
        <constructor access="public" enable="true">
            <javadoc xml:space="preserve"/>
            <params/>
            <throws/>
            <body>
                <call expression="turn(Greenfoot.getRandomNumber(360))" expression-java="turn(Greenfoot.getRandomNumber(360))" enable="true"/>
            </body>
        </constructor>
    </constructors>
    <methods>
        <method access="public" type="void" type-java="void" name="transitionToGameLostWorld" enable="true">
            <javadoc xml:space="preserve">Make the current world, the GameWonWorld!</javadoc>
            <params/>
            <throws/>
            <body>
                <variable type="World" type-java="World" name="gameLostWorld" value="new GameLostWorld()" value-java=" new GameLostWorld()" enable="true"/>
                <call expression="Greenfoot.setWorld(gameLostWorld)" expression-java="Greenfoot.setWorld(gameLostWorld)" enable="true"/>
            </body>
        </method>
        <method access="public" type="boolean" type-java="boolean" name="isGameLost" enable="true">
            <javadoc xml:space="preserve">When the list of Worm objects in the world is empty, we win the game!</javadoc>
            <params/>
            <throws/>
            <body>
                <variable type="World" type-java="World" name="world" value="getWorld()" value-java="getWorld()" enable="true"/>
                <if condition="world.getObjects(Crab.class).isEmpty()" condition-java="world.getObjects(Crab.class).isEmpty()" enable="true">
                    <ifStatements>
                        <return value="true" value-java="true" enable="true"/>
                    </ifStatements>
                    <else>
                        <return value="false" value-java="false" enable="true"/>
                    </else>
                </if>
            </body>
        </method>
        <method access="public" type="void" type-java="void" name="act" enable="true">
            <javadoc xml:space="preserve">Act - do whatever the Lobster wants to do. This method is called whenever the 'Act' or 'Run' button gets pressed in the environment.</javadoc>
            <params/>
            <throws/>
            <body>
                <call expression="moveAround()" expression-java="moveAround()" enable="true"/>
                <call expression="eat()" expression-java="eat()" enable="true"/>
                <if condition="isGameLost()" condition-java="isGameLost()" enable="true">
                    <ifStatements>
                        <call expression="transitionToGameLostWorld()" expression-java="transitionToGameLostWorld()" enable="true"/>
                    </ifStatements>
                </if>
            </body>
        </method>
        <method access="public" type="void" type-java="void" name="moveAround" enable="true">
            <javadoc xml:space="preserve"/>
            <params/>
            <throws/>
            <body>
                <call expression="move(4)" expression-java="move(4)" enable="true"/>
                <if condition="Greenfoot.getRandomNumber(10)==1" condition-java="Greenfoot.getRandomNumber(10) == 1" enable="true">
                    <ifStatements>
                        <call expression="turn(Greenfoot.getRandomNumber(90)-45)" expression-java="turn(Greenfoot.getRandomNumber(90) - 45)" enable="true"/>
                    </ifStatements>
                </if>
                <if condition="isAtEdge()" condition-java="isAtEdge()" enable="true">
                    <ifStatements>
                        <call expression="turn(180)" expression-java="turn(180)" enable="true"/>
                    </ifStatements>
                </if>
            </body>
        </method>
        <method access="public" type="void" type-java="void" name="eat" enable="true">
            <javadoc xml:space="preserve"/>
            <params/>
            <throws/>
            <body>
                <variable type="Actor" type-java="Actor" name="crab" value="getOneIntersectingObject(Crab.class)" value-java="getOneIntersectingObject(Crab.class)" enable="true"/>
                <if condition="crab!=null" condition-java="crab != null" enable="true">
                    <ifStatements>
                        <variable type="World" type-java="World" name="world" value="getWorld()" value-java="getWorld()" enable="true"/>
                        <call expression="world.removeObject(crab)" expression-java="world.removeObject(crab)" enable="true"/>
                        <call expression="Greenfoot.playSound(&quot;bio.mp3&quot;)" expression-java="Greenfoot.playSound(&quot;bio.mp3&quot;)" enable="true"/>
                    </ifStatements>
                </if>
            </body>
        </method>
        <method access="public" type="void" type-java="void" name="removeObject" enable="true">
            <javadoc xml:space="preserve"/>
            <params/>
            <throws/>
            <body>
                <variable type="Actor" type-java="Actor" name="worm" value="getOneIntersectingObject(Worm.class)" value-java="getOneIntersectingObject(Worm.class)" enable="true"/>
                <if condition="worm!=null" condition-java="worm != null" enable="true">
                    <ifStatements>
                        <variable type="World" type-java="World" name="world" value="getWorld()" value-java="getWorld()" enable="true"/>
                        <call expression="world.removeObject(worm)" expression-java="world.removeObject(worm)" enable="true"/>
                        <call expression="addLobster()" expression-java="addLobster()" enable="true"/>
                    </ifStatements>
                </if>
            </body>
        </method>
        <method access="public" type="void" type-java="void" name="addLobster" enable="true">
            <javadoc xml:space="preserve"/>
            <params/>
            <throws/>
            <body>
                <variable type="Actor" type-java="Actor" name="worm" value="getOneIntersectingObject(Worm.class)" value-java="getOneIntersectingObject(Worm.class)" enable="true"/>
                <if condition="worm!=null" condition-java="worm != null" enable="true">
                    <ifStatements>
                        <variable type="World" type-java="World" name="world" value="getWorld()" value-java="getWorld()" enable="true"/>
                        <call expression="world.addObject(new Lobster(),worm.getX(),worm.getY())" expression-java="world.addObject( new Lobster(), worm.getX(), worm.getY())" enable="true"/>
                    </ifStatements>
                </if>
            </body>
        </method>
    </methods>
</class>
